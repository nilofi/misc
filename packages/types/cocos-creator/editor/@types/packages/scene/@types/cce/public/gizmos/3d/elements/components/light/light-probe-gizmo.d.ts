/// <reference types="node" />
import { LightProbeGroup, Node } from "cc";
import { IChangeNodeOptions, ISceneMouseEvent } from "../../../../../../../../source/private.js";
import LightProbeBoundingBoxController from "../../../../../../../../source/script/public/gizmos/3d/elements/controller/light-probe-bounding-box-controller.js";
import LightProbeController, { TargetDelegate } from "../../../../../../../../source/script/public/gizmos/3d/elements/controller/light-probe-controller.js";
import GizmoBase from "../../../../../../../../source/script/public/gizmos/3d/elements/gizmo-base.js";
import GizmoOperationEventListener from "../../../../../../../../source/script/public/gizmos/3d/elements/listener/gizmo-operation-event-listener.js";
import LightProbeEditModeListener from "../../../../../../../../source/script/public/gizmos/3d/elements/listener/light-probe-edit-mode-listener.js";
import { IControlMouseEvent } from "../../../../../../../../source/script/public/gizmos/defines.js";
import "../../../../../../../../source/script/public/gizmos/utils/set-util.js";
import SimpleSet from "../../../../../../../../source/script/public/gizmos/utils/set-util.js";
export default class LightProbeGizmo extends GizmoBase implements TargetDelegate<LightProbeGroup>, LightProbeEditModeListener, GizmoOperationEventListener {
    shouldRegisterGizmoOperationEvent: boolean;
    _controller: LightProbeController;
    _originTarget?: LightProbeGroup;
    _boundingBoxController: LightProbeBoundingBoxController;
    _minPosPath: string | null;
    _maxPosPath: string | null;
    _lightProbeRoot?: Node;
    _boundingBoxRoot?: Node;
    set target(value: LightProbeGroup);
    get target(): LightProbeGroup;
    _isInitialized: boolean;
    protected init(): void;
    createController(gizmoRoot: Node): void;
    protected onShow(): void;
    protected onHide(): void;
    onNodeChanged(event: IChangeNodeOptions): void;
    private checkIconGizmoStats;
    static debounceUpdateController: NodeJS.Timeout | null;
    static debounceUpdateLines: NodeJS.Timeout | null;
    private afterPositionGizmoSetPositions;
    _checkShouldSkipUpdateLightProbeController(event?: IChangeNodeOptions): boolean;
    protected onTargetUpdate(): void;
    onBBControllerMouseDown(event: IControlMouseEvent): void;
    onBBControllerMouseMove(event: IControlMouseEvent): void;
    onBBControllerMouseUp(event: IControlMouseEvent): void;
    updateNodeTransformInfo(node: Node): void;
    get currentTransformTool(): any;
    updateCurrentTransformToolVisible(mode: boolean): void;
    lightProbeEditModeChanged(mode: boolean): void;
    lightProbeInfoChanged(): void;
    boundingBoxEditModeChanged(mode: boolean): void;
    checkCurrentTargetPointingSelf(): boolean;
    duplicateCurrentSelectedProbes(): SimpleSet<Node>;
    deleteCurrentSelectedProbes(): SimpleSet<Node>;
    select(nodes: SimpleSet<Node>): void;
    selectAll(): void;
    unselect(nodes: SimpleSet<Node>): void;
    unselectAll(): void;
    onNotGizmoMouseDown(event: ISceneMouseEvent): void;
    onNotGizmoMouseMove(event: ISceneMouseEvent): void;
    onNotGizmoMouseUp(event: ISceneMouseEvent): void;
    shouldEmitNodes(): SimpleSet<string>;
    currentSelectedNodes(): SimpleSet<Node>;
}
//# sourceMappingURL=light-probe-gizmo.d.ts.map
